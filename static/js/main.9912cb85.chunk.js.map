{"version":3,"sources":["assets/gifs/loading.gif","api/streamer.js","api/data-generator.js","components/Input.jsx","components/Button.jsx","components/Checkbox.jsx","components/VinList/VinList.js","components/ProgressBar/ProgressBar.jsx","components/CarList/partial/CarListItem/CarListItem.jsx","components/CarList/CarList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DEFAULT_TIME_RANGE_IN_MS","Streamer","dataGenerator","timeRange","arguments","length","undefined","Object","classCallCheck","this","isStreaming","handlers","isFunction","Error","generator","runTriggers","_this","_this$timeRange","slicedToArray","min","max","timeout","faker","random","number","setTimeout","trigger","handler","push","filter","h","record","forEach","coordinate","precision","toFixed","percentage","Input","_ref","className","props","objectWithoutProperties","react_default","a","createElement","assign","type","cn","Button","Checkbox","children","component_default","icons","VinList","vins","onVinWatchChange","map","vin","key","components_Checkbox","checked","isWatching","onChange","ProgressBar","percent","style","width","concat","CarListItem","carData","Fragment","Math","floor","fuel","components_ProgressBar_ProgressBar","wiperFluid","position","transition","top","location","lat","left","lng","src","require","height","alt","CarList","_useState","useState","_useState2","isFiltered","setIsFiltered","filterByActives","filteredVins","partial_CarListItem_CarListItem","App","state","error","createStreamer","range","streamer","timestamp","Date","getTime","generateCarData","subscribe","updateState","start","i","findIndex","setState","handleVinChange","target","value","handleAddVin","isValid","_this$state","toggleWatch","shouldWatch","stop","handleVinWatchingChange","index","_this$state2","trimmedVin","trim","find","v","_this$state3","components_Input","placeholder","Button_Button","onClick","components_VinList_VinList","components_CarList_CarList","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9912cb85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.e141bc5c.gif\";","import faker from 'faker'\r\nimport isFunction from 'lodash/fp/isFunction'\r\n\r\nexport default function createStreamerFrom(generator, range) {\r\n  return new Streamer(generator, range)\r\n}\r\n\r\nconst DEFAULT_TIME_RANGE_IN_MS = [1000, 5000]\r\n\r\nclass Streamer {\r\n  generator\r\n  timeRange\r\n  isStreaming = false\r\n  handlers = []\r\n\r\n  constructor(dataGenerator, timeRange = DEFAULT_TIME_RANGE_IN_MS) {\r\n    if (!isFunction(dataGenerator)) {\r\n      throw new Error('Streamer: Data generator must be a factory function')\r\n    }\r\n    this.generator = dataGenerator\r\n    this.timeRange = timeRange\r\n  }\r\n\r\n  start() {\r\n    this.isStreaming = true\r\n    this.runTriggers()\r\n  }\r\n\r\n  stop() {\r\n    this.isStreaming = false\r\n  }\r\n\r\n  runTriggers() {\r\n\r\n    const [min, max] = this.timeRange\r\n    const timeout = faker.random.number({ min, max })\r\n    setTimeout(() => {\r\n      if(this.isStreaming){\r\n        this.trigger()\r\n        this.runTriggers()\r\n      }\r\n    }, timeout)\r\n  }\r\n\r\n  subscribe(handler) {\r\n    this.handlers.push(handler)\r\n  }\r\n\r\n  removeHandler(handler) {\r\n    this.handlers = this.handlers.filter(h => h !== handler)\r\n  }\r\n\r\n  trigger() {\r\n    const record = this.generator()\r\n    this.handlers.forEach(h => h(record))\r\n  }\r\n}\r\n","import faker from 'faker'\r\nexport default function generateCarData(vin) {\r\n  return {\r\n    vin,\r\n    timestamp: timestamp(),\r\n    fuel: fuelLevel(),\r\n    wiperFluid: wiperFluid(),\r\n    location: location(),\r\n  }\r\n}\r\n\r\nfunction timestamp() {\r\n  return new Date().getTime()\r\n}\r\n\r\nfunction fuelLevel() {\r\n  return percentage()\r\n}\r\n\r\nfunction wiperFluid() {\r\n  return percentage()\r\n}\r\n\r\nfunction location() {\r\n  return {\r\n    lat: coordinate(),\r\n    lng: coordinate(),\r\n  }\r\n}\r\n\r\nfunction coordinate() {\r\n  return faker.random\r\n    .number({ min: 0, max: 25, precision: 0.000000001 })\r\n    .toFixed(9)\r\n}\r\n\r\nfunction percentage() {\r\n  return faker.random.number({ min: 0, max: 1, precision: 0.01 }).toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport cn from 'classnames'\r\nimport './Input.scss'\r\n\r\nfunction Input({ className, ...props }) {\r\n  return <input type=\"text\" {...props} className={cn('input', className)} />\r\n}\r\n\r\nexport default Input\r\n","import cn from 'classnames'\r\nimport React from 'react'\r\nimport './Button.scss'\r\n\r\nexport default function Button({ className, ...props }) {\r\n  return <button {...props} className={cn(className, 'button')} />\r\n}\r\n","import React from 'react'\r\nimport Toggle from 'react-toggle';\r\nimport './Checkbox.scss'\r\n\r\nfunction Checkbox({ type, children, ...props }) {\r\n  return (\r\n    <label className=\"checkbox-label\">\r\n      <Toggle  {...props} icons={false}/> \r\n      <span className=\"label\">{children}</span>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from 'react';\r\nimport './styles.scss'\r\nimport CheckBox from '../Checkbox'\r\n\r\nconst VinList = ({ vins, onVinWatchChange }) => {\r\n    const renderVins = () => {\r\n        return vins.map((vin, key) =>\r\n            <CheckBox\r\n                key={key}\r\n                checked={vin.isWatching}\r\n                onChange={() => onVinWatchChange(key)}\r\n            >\r\n                {vin.vin}\r\n            </CheckBox>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"vin-list\">\r\n            {renderVins()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VinList","import React from 'react';\r\nimport './styles.scss'\r\nconst ProgressBar = ({ percent }) => {\r\n\r\n    return (\r\n        <div className=\"progress-bar-container\">\r\n            <div className=\"bar\" style={{width: `${percent}%`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar","import React from 'react';\r\nimport ProgressBar from '../../../ProgressBar/ProgressBar';\r\nimport './styles.scss'\r\n\r\nconst CarListItem = ({ vin }) => {\r\n\r\n    const renderLoading = () => (\r\n        <div className=\"loading\">\r\n            <img src={require('../../../../assets/gifs/loading.gif')} height=\"80\" alt=\"\"/>\r\n        </div>\r\n    )\r\n\r\n    const renderDetails = () => (\r\n        <>\r\n            <div className=\"car-data\">\r\n                <div className=\"detail\">\r\n                    <i className=\"fas fa-gas-pump\"></i>\r\n                    <div className=\"t-sm t-bold\">Fuel level</div>\r\n                    <div className=\"t-sm\">{Math.floor(carData.fuel * 100)}%</div>\r\n                    <ProgressBar percent={carData.fuel * 100} />\r\n                </div>\r\n                <div className=\"detail\">\r\n                    <i className=\"fas fa-tint\"></i>\r\n                    <div className=\"t-sm t-bold\">Wiper fluid</div>\r\n                    <div className=\"t-sm\">{Math.floor(carData.wiperFluid * 100)}%</div>\r\n                    <ProgressBar percent={carData.wiperFluid * 100} />\r\n                </div>\r\n            </div>\r\n            <div className=\"location\">\r\n                <i className=\"fas fa-car-side\" style={{\r\n                    position: 'absolute',\r\n                    transition: 'all 5000ms',\r\n                    top: `${carData.location.lat}%`,\r\n                    left: `${carData.location.lng}%`,\r\n                }}></i>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n\r\n    const { carData } = vin\r\n    return (\r\n        <div className=\"car-list-item animated fadeIn\">\r\n            <div className=\"header\">\r\n                <i className=\"fas fa-car-side\"></i>\r\n                <span>VIN:</span>\r\n                <span className=\"t-bold\">{vin.vin}</span>\r\n            </div>\r\n            <div className=\"content\">\r\n                {carData ? renderDetails() : renderLoading()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarListItem","import React from 'react';\r\nimport CarListItem from './partial/CarListItem/CarListItem';\r\nimport './styles.scss'\r\nimport Checkbox from '../Checkbox';\r\nimport { useState } from 'react'\r\nconst CarList = ({ vins }) => {\r\n    const [isFiltered, setIsFiltered] = useState(false)\r\n\r\n    const filterByActives = () => vins.filter(vin => vin.isWatching)\r\n    const filterByFuel = () => filterByActives().filter(vin => (vin.carData && vin.carData.fuel < 0.15))\r\n    const filteredVins = () => isFiltered ? filterByFuel() : filterByActives();\r\n\r\n    const renderCars = () => {\r\n        if (!vins.length) return 'No cars added.'\r\n        return filteredVins().map((vin, key) => (\r\n            <CarListItem key={key} vin={vin} />\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"car-list\">\r\n            <div className=\"header\">\r\n                <Checkbox checked={isFiltered} onChange={() => setIsFiltered(!isFiltered)}>\r\n                    Filter Events where fuel level is under 15%\r\n                </Checkbox>\r\n            </div>\r\n            <div className=\"list\">\r\n                {renderCars()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarList","import React, { Component } from 'react'\r\nimport './App.scss'\r\nimport createStreamerFrom from './api/streamer'\r\nimport generateCarData from './api/data-generator'\r\nimport Input from './components/Input'\r\nimport Button from './components/Button'\r\nimport VinList from './components/VinList/VinList';\r\nimport CarList from './components/CarList/CarList';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    vin: '',\r\n    vins: [],\r\n    error: ''\r\n  }\r\n\r\n  createStreamer = (vin) => {\r\n    const streamer = createStreamerFrom(() => generateCarData(vin))\r\n    streamer.subscribe(this.updateState)\r\n    streamer.start()\r\n    return streamer;\r\n  }\r\n\r\n  updateState = carData => {\r\n    const { vins } = this.state;\r\n    const i = vins.findIndex(vin => vin.vin === carData.vin)\r\n    vins[i].carData = carData\r\n    this.setState({ vins })\r\n  }\r\n\r\n\r\n  handleVinChange = ({ target }) => {\r\n    this.setState({ vin: target.value })\r\n  }\r\n  isValid() {\r\n    const { vin, vins } = this.state\r\n    const trimmedVin = vin.trim();\r\n\r\n    let isValid = true;\r\n\r\n    if (!trimmedVin.length || trimmedVin.length < 5) {\r\n      this.setState({ error: \"Vin must be atleast 5 characters.\" })\r\n      isValid = false\r\n    }\r\n\r\n    if (vins.find(v => v.vin === trimmedVin)){\r\n      this.setState({ error: \"You've already added this vin.\" })\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid\r\n  }\r\n\r\n  handleAddVin = () => {\r\n    if (!this.isValid()) return;\r\n\r\n    const { vin, vins } = this.state\r\n    const streamer = this.createStreamer(vin)\r\n    vins.push({ vin, isWatching: true, streamer })\r\n    this.setState({ vin: '', vins, error: '' })\r\n  }\r\n\r\n  toggleWatch = (streamer, shouldWatch) => {\r\n    shouldWatch ? streamer.start() : streamer.stop()\r\n  }\r\n\r\n  handleVinWatchingChange = (index) => {\r\n    const { vins } = this.state\r\n    const vin = vins[index]\r\n    vin.isWatching = !vin.isWatching\r\n    this.toggleWatch(vin.streamer, vin.isWatching)\r\n    this.setState({ vins })\r\n  }\r\n\r\n  render() {\r\n    const { vin, vins } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"header\">\r\n          <i className=\"fas fa-3x fa-car\"></i>\r\n          <div className=\"title\">\r\n            <span>Welcome to</span>\r\n            <span>VIN Watcher</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"vins-container\">\r\n            <div className=\"add-vin-input\">\r\n              <Input value={vin} onChange={this.handleVinChange} placeholder=\"Enter vin\" />\r\n              <Button onClick={this.handleAddVin}>Add VIN</Button>\r\n              <span className=\"error\">{this.state.error}</span>\r\n            </div>\r\n            <VinList vins={vins} onVinWatchChange={this.handleVinWatchingChange} />\r\n          </div>\r\n          <div className=\"cars-container\">\r\n            <CarList vins={vins} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport 'react-toggle/style.css'\r\nimport './assets/global.scss';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}